---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Archive CloudWatch Logs to S3 every day using Lambda.
Transform: AWS::Serverless-2016-10-31
Parameters:
  CloudWatchLogsArchiveBucket:
    Description: The S3 bucket where CloudWatch will archive logs.
    Type: String
  ScheduleExpression:
    Description: A valid AWS Event Rule Scheduled Expression (e.g. rate(4 hours))
    Type: String
    Default: "rate(4 hours)"
Resources:

  ServerlessFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Description: Archive CloudWatch Logs to S3 every day.
      CodeUri: code/cloudwatch_logs_s3_archive
      Handler: cloudwatch_logs_s3_archive.lambda_handler
      MemorySize: 512
      Runtime: python3.8
      Architectures:
        - x86_64
      Timeout: 900
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: "cloudwatch_logs_s3_archive"
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_LOGGER_SAMPLE_RATE: "1.0"
          LOG_LEVEL: "DEBUG"
          S3_BUCKET: !Ref CloudWatchLogsArchiveBucket
          ACCOUNT_ID: !Ref AWS::AccountId
      Events:
        CWSchedule:
          Type: Schedule
          Properties:
            Description: cloudwatch-logs-s3-archive-test2
            Enabled: True
            Schedule: !Ref ScheduleExpression
      Policies:
        - AWSLambdaExecute
        - !Ref CloudWatchLogsS3ArchiveManagedPolicy

  CloudWatchLogsS3ArchiveManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
                - "logs:CreateExportTask"
                - "logs:Describe*"
                - "logs:ListTagsLogGroup"
              Effect: Allow
              Resource: "*"
            - Action:
                - "ssm:DescribeParameters"
                - "ssm:GetParameter"
                - "ssm:GetParameters"
                - "ssm:GetParametersByPath"
                - "ssm:PutParameter"
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/log-exporter-last-export/*"
              Effect: Allow
            - Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/log-exporter-*"
              Effect: Allow
            - Sid: AllowCrossAccountObjectAcc
              Effect: Allow
              Action:
                - "s3:PutObject"
                - "s3:PutObjectAcl"
              Resource: !Sub "arn:aws:s3:::${CloudWatchLogsArchiveBucket}/*"
            - Sid: AllowCrossAccountBucketAcc
              Effect: Allow
              Action:
                - "s3:PutBucketAcl"
                - "s3:GetBucketAcl"
              Resource: !Sub "arn:aws:s3:::${CloudWatchLogsArchiveBucket}"


Outputs:
  ServerlessFunctionArn:
    Description: The ARN of the Lambda handler
    Value:
      "Fn::GetAtt":
        - ServerlessFunction
        - Arn
